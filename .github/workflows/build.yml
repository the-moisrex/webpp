name: Build

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CXX: /usr/bin/g++-12
  CC: /usr/bin/gcc-12

defaults:
  run:
    working-directory: .

jobs:
  install:
    # The CMake configure and build commands are platform-agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Installing Dependencies
        run: sudo apt update && sudo apt install libboost-all-dev zlib1g-dev googletest g++-12 ninja-build

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake --preset=default
  tests:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Build Tests
        run: cmake --build --preset tests

      - name: Test
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest --preset tests

  webpp-lib:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Build Web++ Library
        # run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target webpp
        run: cmake --build --preset webpp

  benchmarks:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Build Benchmarks
        run: cmake --build --preset benchmarks

      - name: Run the executable
        run: ./build/webpp-benchmarks

  cgi-hello-world-example:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Build CGI / Hello World Example
        run: cmake --build --preset cgi-hello-world

      - name: Run the executable
        run: ./build/cgi-hello-world

  cgi-application:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Build CGI / Application Example
        run: cmake --build --preset cgi-application

      - name: Run the executable
        run: ./build/cgi-application

  beast-view:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Build CGI / Application Example
        run: cmake --build --preset beast-view

      - name: Run the executable
        run: ./build/beast-view
